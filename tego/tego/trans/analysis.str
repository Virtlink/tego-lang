module analysis

imports

  statixruntime
  statix/api
  statix/runtime/pp
  statix/runtime/analysis
  statix/runtime/ast

  pp
  desugar
  check
  to-ir
  generate
  injections/-

  libspoofax/term/origin
  libspoofax/analysis/constraint

rules // Analysis

  // single-file analysis
  editor-analyze = check-all(stx-editor-analyze(pre-analyze, post-analyze|"statics", "programOk"))

  check-all(s) = where((?AnalyzeSingle(files, _, _) <+ ?AnalyzeMulti(_, files, _, _));
    files_with_msgs := <map((id, get-ast-from-change); check)> files
  ); s; with-msgs(|files_with_msgs)

  get-ast-from-change = ?Added(<id>) + ?Changed(<id>, _) + ?Cached(<id>)

  with-msgs(|files_with_msgs) = AnalysisResult(map(analysis-result-with-msgs(|files_with_msgs)))

  analysis-result-with-msgs(|files_with_msgs) = (?filename, result-with-msgs(|<fetch-elem(?(filename, _, _, _))> files_with_msgs))

  result-with-msgs(|(_, errors, warnings, infos)) = Full(id, id, !(<id>, errors); conc, !(<id>, warnings); conc, !(<id>, infos); conc)
  result-with-msgs(|(_, errors, warnings, infos)) = Update(id,   !(<id>, errors); conc, !(<id>, warnings); conc, !(<id>, infos); conc)

  // see README.md for details on how to switch to multi-file analysis
  // multi-file analysis
//  editor-analyze = stx-editor-analyze(pre-analyze, post-analyze|"statics", "projectOk", "fileOk")

  pre-analyze  = origin-track-forced(desugar-all; explicate-injections-Tego)
  // IR and ANF temporarily disabled, until we have our semantic features working
//  pre-analyze  = origin-track-forced(desugar-all; to-ir-all; to-ir-anf-all; explicate-injections-Tego)
  post-analyze = origin-track-forced(implicate-injections-Tego)



rules // Editor Services

  editor-resolve = stx-editor-resolve

  editor-hover = stx-editor-hover //((pp-TYPE <+ pp-Statix-ATerm); escape-html)

rules // Debugging

  // Prints the abstract syntax ATerm of a selection.
  debug-show-aterm: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"aterm")> path
       ; result   := selected

  // Prints the pre-analyzed abstract syntax ATerm of a selection.
  debug-show-pre-analyzed: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"pre-analyzed.aterm")> path
       ; result   := <pre-analyze> selected

  // Prints the analyzed annotated abstract syntax ATerm of a selection.
  debug-show-analyzed: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"analyzed.aterm")> path
       ; result   := selected

  // Prints the type of a selection.
  debug-show-type: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"type.aterm")> path
       ; result   := <get-type> selected

  // Shows desugared
  debug-show-desugar: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"desug.aterm")> path
       ; result   := <desugar-all; strip-annos> selected

  // Prints desugared
  debug-pp-desugar: (selected, _, _, path, project-path) -> (filename, result)
    with ext      := <get-extension> path
       ; filename := <guarantee-extension(|$[desug.[ext]])> path
       ; result   := <desugar-all; strip-annos; pp-debug> selected
       
  // Shows IR
  debug-show-ir: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"ir.aterm")> path
       ; result   := <desugar-all; to-ir-all; strip-annos> selected

  // Prints IR
  debug-pp-ir: (selected, _, _, path, project-path) -> (filename, result)
    with ext      := <get-extension> path
       ; filename := <guarantee-extension(|$[ir.[ext]])> path
       ; result   := <desugar-all; to-ir-all; strip-annos; pp-debug> selected

  // Shows ANF
  debug-show-anf: (selected, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"anf.aterm")> path
       ; result   := <desugar-all; to-ir-all; to-ir-anf-all; strip-annos> selected

  // Prints ANF
  debug-pp-anf: (selected, _, _, path, project-path) -> (filename, result)
    with ext      := <get-extension> path
       ; filename := <guarantee-extension(|$[anf.[ext]])> path
       ; result   := <desugar-all; to-ir-all; to-ir-anf-all; strip-annos; pp-debug> selected
