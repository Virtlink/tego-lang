File(
  [ Module(
      []
    , "example1"
    , [ImportAll("mb/nabl2/terms"), ImportAll("mb/statix/common"), ImportAll("mb/statix/solver"), ImportAll("mb/statix/constraints")]
    , [ StrategyDecl(
          []
        , "complete"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDefWInput(
          "complete"
        , [ParamDefNoType("v")]
        , "__input"
        , Let(
            "x20"
          , Apply(Var("expandDeterministic"){ OfType(
                                                STRATEGY(
                                                  [CLASS("ITermVar")]
                                                , CLASS("SolverState")
                                                , LIST(CLASS("SolverState"))
                                                )
                                              )
                                            }, [Var("v"){OfType(CLASS("ITermVar"))}]){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}
          , Let(
              "x19"
            , Apply(Var("flatMap"){ OfType(
                                      STRATEGY(
                                        [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
                                      , LIST(CLASS("SolverState"))
                                      , LIST(CLASS("SolverState"))
                                      )
                                    )
                                  }, [Var("x20"){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}]){OfType(
                                                                                                                             STRATEGY([], LIST(CLASS("SolverState")), LIST(CLASS("SolverState")))
                                                                                                                           )}
            , Let(
                "x23"
              , Apply(Var("expandAllQueries"){ OfType(
                                                 STRATEGY(
                                                   [CLASS("ITermVar")]
                                                 , CLASS("SolverState")
                                                 , LIST(CLASS("SolverState"))
                                                 )
                                               )
                                             }, [Var("v"){OfType(CLASS("ITermVar"))}]){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}
              , Let(
                  "x22"
                , Apply(Var("flatMap"){ OfType(
                                          STRATEGY(
                                            [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
                                          , LIST(CLASS("SolverState"))
                                          , LIST(CLASS("SolverState"))
                                          )
                                        )
                                      }, [Var("x23"){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}]){OfType(
                                                                                                                                 STRATEGY([], LIST(CLASS("SolverState")), LIST(CLASS("SolverState")))
                                                                                                                               )}
                , Let(
                    "x26"
                  , Apply(Var("expandAllInjections"){ OfType(
                                                        STRATEGY(
                                                          [CLASS("ITermVar")]
                                                        , CLASS("SolverState")
                                                        , LIST(CLASS("SolverState"))
                                                        )
                                                      )
                                                    }, [Var("v"){OfType(CLASS("ITermVar"))}]){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}
                  , Let(
                      "x25"
                    , Apply(Var("flatMap"){ OfType(
                                              STRATEGY(
                                                [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
                                              , LIST(CLASS("SolverState"))
                                              , LIST(CLASS("SolverState"))
                                              )
                                            )
                                          }, [Var("x26"){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}]){OfType(
                                                                                                                                     STRATEGY([], LIST(CLASS("SolverState")), LIST(CLASS("SolverState")))
                                                                                                                                   )}
                    , Let(
                        "x28"
                      , Apply(Var("expandAllPredicates"){ OfType(
                                                            STRATEGY(
                                                              [CLASS("ITermVar")]
                                                            , CLASS("SolverState")
                                                            , LIST(CLASS("SolverState"))
                                                            )
                                                          )
                                                        }, [Var("v"){OfType(CLASS("ITermVar"))}]){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}
                      , Let(
                          "x27"
                        , Eval(Var("x28"){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}, Var("__input"){OfType(CLASS("SolverState"))}){OfType(LIST(CLASS("SolverState")))}
                        , Let(
                            "x24"
                          , Eval(Var("x25"){OfType(
                                              STRATEGY([], LIST(CLASS("SolverState")), LIST(CLASS("SolverState")))
                                            )}, Var("x27"){OfType(LIST(CLASS("SolverState")))}){OfType(LIST(CLASS("SolverState")))}
                          , Let(
                              "x21"
                            , Eval(Var("x22"){OfType(
                                                STRATEGY([], LIST(CLASS("SolverState")), LIST(CLASS("SolverState")))
                                              )}, Var("x24"){OfType(LIST(CLASS("SolverState")))}){OfType(LIST(CLASS("SolverState")))}
                            , Eval(Var("x19"){OfType(
                                                STRATEGY([], LIST(CLASS("SolverState")), LIST(CLASS("SolverState")))
                                              )}, Var("x21"){OfType(LIST(CLASS("SolverState")))}){OfType(LIST(CLASS("SolverState")))}
                            ){OfType(LIST(CLASS("SolverState")))}
                          ){OfType(LIST(CLASS("SolverState")))}
                        ){OfType(LIST(CLASS("SolverState")))}
                      ){OfType(LIST(CLASS("SolverState")))}
                    ){OfType(LIST(CLASS("SolverState")))}
                  ){OfType(LIST(CLASS("SolverState")))}
                ){OfType(LIST(CLASS("SolverState")))}
              ){OfType(LIST(CLASS("SolverState")))}
            ){OfType(LIST(CLASS("SolverState")))}
          ){OfType(LIST(CLASS("SolverState")))}
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "expandAllPredicates"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "expandAllInjections"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "expandAllQueries"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "expandDeterministic"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "flatMap"
        , []
        , [StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))]
        , ListType(TypeRef("SolverState"))
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
             , LIST(CLASS("SolverState"))
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "fixsetSS"
        , []
        , [StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "trySS"
        , []
        , [StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "repeatSS"
        , []
        , [StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "limitSS"
        , []
        , [IntType(), StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [INT(), STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "distinctSS"
        , []
        , [StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "orSS"
        , []
        , [ StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))
          , StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))
          ]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [ STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))
               , STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))
               ]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "idSS"
        , []
        , []
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){OfType(STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState"))))}
      , StrategyDecl(
          [ExternDecl()]
        , "ifSS"
        , []
        , [ StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))
          , StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))
          , StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))
          ]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [ STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))
               , STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))
               , STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))
               ]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "singleSS"
        , []
        , [StrategyType([], TypeRef("SolverState"), ListType(TypeRef("SolverState")))]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [STRATEGY([], CLASS("SolverState"), LIST(CLASS("SolverState")))]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "selectConstraints"
        , []
        , [ TypeRef("Class")
          , StrategyType(
              [TypeRef("IConstraint")]
            , TypeRef("SolverState")
            , ListType(TypeRef("SolverState"))
            )
          ]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [ CLASS("Class")
               , STRATEGY(
                   [CLASS("IConstraint")]
                 , CLASS("SolverState")
                 , LIST(CLASS("SolverState"))
                 )
               ]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "assertValid"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "expandPredicateConstraint"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "expandQueryConstraint"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "expandInjection"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "filterPlaceholders"
        , []
        , [TypeRef("ITermVar")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      , StrategyDecl(
          [ExternDecl()]
        , "containsVar"
        , []
        , [TypeRef("ITermVar"), TypeRef("IConstraint")]
        , TypeRef("SolverState")
        , ListType(TypeRef("SolverState"))
        ){ OfType(
             STRATEGY(
               [CLASS("ITermVar"), CLASS("IConstraint")]
             , CLASS("SolverState")
             , LIST(CLASS("SolverState"))
             )
           )
         }
      ]
    )
  , Module(
      [ExternModule()]
    , "mb/statix/constraints"
    , []
    , [ ClassDecl([PublicDecl(), ExternDecl()], "CResolveQuery"){OfType(CLASS("CResolveQuery"))}
      , ClassDecl([PublicDecl(), ExternDecl()], "CUser"){OfType(CLASS("CUser"))}
      ]
    )
  , Module(
      [ExternModule()]
    , "mb/statix/common"
    , []
    , [ClassDecl([PublicDecl(), ExternDecl()], "SolverState"){OfType(CLASS("SolverState"))}]
    )
  , Module(
      [ExternModule()]
    , "mb/statix/solver"
    , []
    , [ClassDecl([PublicDecl(), ExternDecl()], "IConstraint"){OfType(CLASS("IConstraint"))}]
    )
  , Module(
      [ExternModule()]
    , "mb/nabl2/terms"
    , []
    , [ClassDecl([PublicDecl(), ExternDecl()], "ITermVar"){OfType(CLASS("ITermVar"))}]
    )
  ]
)